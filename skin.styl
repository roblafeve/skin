color-base      = whitesmoke
color-primary   = teal
color-secondary = purple
color-tertiary  = orange

// SKIN CONFIGURATION
// To apply a skin to an element, use `@extend $skin-name`.
// To utilize a skin variant, `@extend $skin-name-variant` (not in place currently).

// SKIN BASE
// Shared CSS should be placed inside `skin_base` and will be extend by each `skin`.
// Do not confuse with `defaults`.
skin_base = {
  border-width:      1px
  border-style:      solid
  background-repeat: no-repeat
  transition:        all 0.25s ease-in-out
  background-image:  linear-gradient(rgba(white, 0), rgba(black, 0.05))
}

// SKIN DEFAULT
// Default skin configuration options are placed in `skin_default`.
// Unless specified on a specific `skin`, these options are used.
skin_default = {
  background_color: color-base
  border_luminance: dark
  border_contrast:  10
  text_luminance:   light
  text_contrast:    50
}

// SKINS
skin = {
  primary: {
    text_luminance: dark
    attributes: {
    }
  }
  secondary: {
    background_color: color-secondary
  }
  tertiary: {
    background_color: color-tertiary
  }
}

// GENERATE SKIN BASE
$skin-base
  for key, value in skin_base
    {key}: value

// GENERATE SKINS
for name, value in skin
  merged             = merge({}, skin_default, skin[name])
  background_color   = merged['background_color']
  border_luminance   = merged['border_luminance']
  border_contrast    = merged['border_contrast']
  text_luminance     = merged['text_luminance']
  text_contrast      = merged['text_contrast']
  attributes         = merged.attributes
  $skin-{name}
    @extend $skin-base
    background-color background_color
    border-color     lighten(background_color, border_contrast) if border_luminance is light
    border-color     darken(background_color, border_contrast) if border_luminance is dark
    color            lighten(background_color, text_contrast) if text_luminance is light
    color            darken(background_color, text_contrast) if text_luminance is dark
    for key, value in attributes
      {key}: value if attributes

.thing-1
  &:before
    content 'Skin - ' attr(data-skin)
  @extend $skin-primary

.thing-2
  &:before
    content 'Skin - ' attr(data-skin)
  @extend $skin-secondary

.thing-3
  &:before
    content 'Skin - ' attr(data-skin)
  @extend $skin-tertiary
  &:hover
    @extend $skin-primary

body
  @extend $skin-primary
