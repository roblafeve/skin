// SKIN CONFIGURATION
// To apply a skin to an element, use `@extend $skin-name`.
// To utilize a skin variant, `@extend $skin-name-variant`.

// SKIN BASE
// Shared CSS should be placed inside `skin_base` and will be extend by each `skin`.
// Do not confuse with `defaults`.
$skin-base
  border-width      1px
  border-style      solid
  background-repeat no-repeat
  transition        all 0.25s ease-in-out
  // background-image  linear-gradient(rgba(white, 0), rgba(black, 0.05))

// SKIN DEFAULT
// Default skin configuration options are placed in `skin_default`.
// Unless specified on a specific `skin`, these options are used.
// THIS ONE WORKS!!! 
// Figure out how to pass options so that it doesn't break!
default = {
  color_base: whitesmoke
  border_adjust: -10
  text_adjust: -20
  variants: {
    light: {
      color_adjust: 10
    }
    dark: {
      color_adjust: -10
    }
  }
}

skins = {
  primary: {
  }
  secondary: {
    color_base: orange
  }
  tertiary: {
    color_base: #444
    text_adjust: 20
  }
}

print(z)
  for x, y in z
    unless typeof(y) is 'object'
      {x} y

for skin_name, skin in skins

  // SKIN TEMPLATE
  $skin-{skin_name}
    @extend $skin-base
    // SKIN OPTIONS
    skin_options  = merge({}, default, skin)
    color_base    = skin_options.color_base
    color_adjust  = skin_options.color_adjust
    border_adjust = skin_options.border_adjust
    text_adjust   = skin_options.text_adjust
    
    // ADJUST COLOR BASE
    if color_adjust && color_adjust > 0
      color_base  = lighten(color_base, color_adjust)
    else if color_adjust && color_adjust < 0
      color_base  = darken(color_base, color_adjust*-1)
    
    // BACKGROUND COLOR
    background-color color_base

    // BORDER COLOR
    if border_adjust && border_adjust > 0
      border-color lighten(color_base, border_adjust)
    else if border_adjust && border_adjust < 0
      border-color darken(color_base, border_adjust*-1)
    else
      border-color color_base

    // TEXT COLOR
    if text_adjust && text_adjust > 0
      color lighten(color_base, text_adjust)
    else if text_adjust && text_adjust < 0
      color darken(color_base, text_adjust*-1)
    else
      color color_base

    skin_attributes = merge({}, default.attributes, skin.attributes)
    print(skin_attributes)

  // merged_variants = merge({}, variant, default.variants)
  variants = merge({}, default.variants, skin.variants)
  for variant_name, variant in variants

    $skin-{skin_name}-{variant_name}
      @extend $skin-base
      
      skin_options     = merge({}, default, skin)
      variant_options  = merge({}, skin_options, variants[variant], variant)
      color_base       = variant_options['color_base']
      color_adjust     = variant_options['color_adjust']
      border_adjust    = variant_options['border_adjust']
      text_adjust      = variant_options['text_adjust']
      
      // ADJUST COLOR BASE
      if color_adjust && color_adjust > 0
        color_base  = lighten(color_base, color_adjust)
      else if color_adjust && color_adjust < 0
        color_base  = darken(color_base, color_adjust*-1)
      
      // BACKGROUND COLOR
      background-color color_base

      // BORDER COLOR
      if border_adjust && border_adjust > 0
        border-color lighten(color_base, border_adjust)
      else if border_adjust && border_adjust < 0
        border-color darken(color_base, border_adjust*-1)
      else
        border-color color_base

      // TEXT COLOR
      if text_adjust && text_adjust > 0
        color lighten(color_base, text_adjust)
      else if text_adjust && text_adjust < 0
        color darken(color_base, text_adjust*-1)
      else
        color color_base
      
      skin_attributes    = merge({}, default.attributes, skin.attributes)
      variant_attributes = merge({}, skin_attributes, variants[variant_name].attributes, variant.attributes)
      print(variant_attributes)


.thing-1a
  &:before
    content 'Skin - ' attr(data-skin)
  @extend $skin-primary-light
.thing-1b
  &:before
    content 'Skin - ' attr(data-skin)
  @extend $skin-primary
.thing-1c
  &:before
    content 'Skin - ' attr(data-skin)
  @extend $skin-primary-dark

.thing-2a
  &:before
    content 'Skin - ' attr(data-skin)
  @extend $skin-secondary-light
.thing-2b
  &:before
    content 'Skin - ' attr(data-skin)
  @extend $skin-secondary
.thing-2c
  &:before
    content 'Skin - ' attr(data-skin)
  @extend $skin-secondary-dark

.thing-3a
  &:before
    content 'Skin - ' attr(data-skin)
  @extend $skin-tertiary-light
.thing-3b
  &:before
    content 'Skin - ' attr(data-skin)
  @extend $skin-tertiary
.thing-3c
  &:before
    content 'Skin - ' attr(data-skin)
  @extend $skin-tertiary-dark